from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Sample corpus (collection of documents)
documents = [
    "the car is driven on the road",
    "the truck is driven on the highway",
    "the car is fast and red",
    "my car has a flat tire",
]

# User query
query = ["fast red car"]

# Create TF-IDF vectorizer
vectorizer = TfidfVectorizer()

# Fit on documents + query
tfidf_matrix = vectorizer.fit_transform(documents + query)

# Calculate cosine similarity between the query and each document
cosine_similarities = cosine_similarity(tfidf_matrix[-1], tfidf_matrix[:-1]).flatten()

# Rank documents
ranked_doc_indices = cosine_similarities.argsort()[::-1]

# Display results
print("Query:", query[0])
print("\nTop matching documents:")
for idx in ranked_doc_indices:
    print(f"Doc {idx} | Score: {cosine_similarities[idx]:.4f} | Text: {documents[idx]}")

